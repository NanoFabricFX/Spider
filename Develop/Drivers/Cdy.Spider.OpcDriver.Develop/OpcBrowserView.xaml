<UserControl x:Class="Cdy.Spider.OpcDriver.Develop.OpcBrowserView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Cdy.Spider.OpcDriver.Develop"
             xmlns:dc="clr-namespace:Cdy.Spider.DevelopCommon;assembly=Cdy.Spider.DevelopCommon"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1600">
    <UserControl.Resources>

        <local:IndexConverter x:Key="ic" />
        <local:DoubleValueConvert x:Key="dvc" />
        
        <!--Tree View-->

        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Foreground" Value="{DynamicResource Window.Forground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                            <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{TemplateBinding Foreground}" Stroke="{TemplateBinding Foreground}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource Window.Forground}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#3FFFFFFF"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="32" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>

            </Grid.ColumnDefinitions>
            <TextBlock Margin="5,0,10,0" Text="{local:ResMarker Server,:}" VerticalAlignment="Center" />
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ComboBox IsEditable="True" VerticalContentAlignment="Center" Height="24" ItemsSource="{Binding ServerList}"   Text="{Binding ServerAddress,Mode=TwoWay,UpdateSourceTrigger=LostFocus}" Width="260" VerticalAlignment="Center"/>
                <Button Margin="10,0" Grid.Column="1" Style="{DynamicResource ButtonStyle1}"  BorderBrush="Yellow"  BorderThickness="0,0,0,2" Command="{Binding ServerDiscoveryCommand}" Content="{local:ResMarker Search}"   HorizontalAlignment="Left" VerticalAlignment="Center" Height="24" MinWidth="60" />
            </Grid>
            
            <TextBlock Margin="10,0" Grid.Column="2" Text="{local:ResMarker UserName,:}"  VerticalAlignment="Center"/>
            <TextBox VerticalContentAlignment="Center" Height="24" Foreground="{DynamicResource Window.Forground}" Background="#1FFFFFFF" CaretBrush="White" Grid.Column="3" Text="{Binding UserName,Mode=TwoWay,UpdateSourceTrigger=LostFocus}" Width="160"  VerticalAlignment="Center"/>
            <TextBlock Margin="10,0" Grid.Column="4" Text="{local:ResMarker Password,:}"  VerticalAlignment="Center"/>
            <dc:PasswordControl Grid.Column="5" Password="{Binding Password,Mode=TwoWay,UpdateSourceTrigger=LostFocus}" Width="200" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <Button Margin="10,0" Style="{DynamicResource ButtonStyle1}"  BorderBrush="Green"  BorderThickness="0,0,0,2" Command="{Binding ConnectCommand}" Content="{Binding ConnectString,Mode=OneWay}"  Grid.Column="6" HorizontalAlignment="Left" VerticalAlignment="Center" Height="24" MinWidth="60" />
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="160" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            
            <TreeView x:Name="tv"  Foreground="{DynamicResource Window.Forground}"  ItemContainerStyle="{StaticResource TreeViewItemStyle1}"  ItemsSource="{Binding Children}"   BorderThickness="0,1,1,0" Margin="0,0,0,0" Background="#7F000000">
                <TreeView.Resources>
                    <HierarchicalDataTemplate  DataType="{x:Type local:NodeItem}"  ItemsSource="{Binding Children}">
                        <StackPanel Background="Transparent" Orientation="Horizontal" Height="24">
                            <Image  IsHitTestVisible="False" Focusable="False" Source="/Image/文件夹.png"  Margin="0,0,4,0" Height="18" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                            <Grid   Background="{Binding Background}" VerticalAlignment="Center" Focusable="False"  Name="spanel"    >
                                <TextBlock Foreground="{DynamicResource Window.Forground}" Text="{Binding Name}" VerticalAlignment="Center" />
                            </Grid>
                        </StackPanel>
                    </HierarchicalDataTemplate>

                </TreeView.Resources>
            </TreeView>
            <GridSplitter VerticalAlignment="Stretch" HorizontalAlignment="Right" Background="Transparent" Grid.RowSpan="2" Grid.Row="1"  Width="5" />
            <DataGrid x:Name="dg"  Grid.Column="1"   RowHeaderWidth="36" SelectionUnit="FullRow"  Style="{DynamicResource DataGridStyle1}" MouseLeftButtonDown="dg_MouseLeftButtonDown" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" CellStyle="{DynamicResource DataGridCellStyle1}" RowHeaderStyle="{DynamicResource DataGridRowHeaderStyle1}" RowStyle="{DynamicResource DataGridRowStyle1}" ScrollViewer.CanContentScroll="True"  VerticalScrollBarVisibility="Auto"   VirtualizingPanel.IsVirtualizing="True" MinRowHeight="24" Margin="0,0,0,0" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" ItemsSource="{Binding VariablesChildren}" SelectedItem="{Binding SelectVariable,Mode=TwoWay}"   BorderThickness="0,1,0,0" Background="Transparent" >
                <DataGrid.RowHeaderTemplate>
                    <DataTemplate>
                        <TextBlock  DataContext="{Binding DataContext,RelativeSource={RelativeSource AncestorType=DataGridRow}}" Foreground="{DynamicResource Window.Forground}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource ic}">
                                    <Binding />
                                    <Binding Path="DataContext.VariablesChildren" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </DataTemplate>
                </DataGrid.RowHeaderTemplate>

                <DataGrid.Columns>

                    <DataGridTemplateColumn Header="{local:ResMarker DisplayName}"  Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Margin="5,0" Foreground="{DynamicResource Window.Forground}" Text="{Binding DisplayName}" VerticalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    
                    <DataGridTemplateColumn Header="{local:ResMarker NodeId}"  Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Margin="5,0" Foreground="{DynamicResource Window.Forground}" Text="{Binding NodeId}" VerticalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    

                    <DataGridTemplateColumn Header="{local:ResMarker BrowseName}"  Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Margin="5,0" Foreground="{DynamicResource Window.Forground}" Text="{Binding BrowseName}" VerticalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="{local:ResMarker Description}"  Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Margin="5,0" Foreground="{DynamicResource Window.Forground}" Text="{Binding Description}"  VerticalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="{local:ResMarker DataType}"  Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Margin="5,0" Foreground="{DynamicResource Window.Forground}"  Text="{Binding DataType}" VerticalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="{local:ResMarker AccessLevel}" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="{DynamicResource Window.Forground}" Margin="5,0" Text="{Binding AccessLevel}" VerticalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>

            </DataGrid>

        </Grid>


    </Grid>
</UserControl>
